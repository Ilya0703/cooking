import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class RecipeParser {
    private static final String BASE_URL = "https://www.russianfood.com";
    private static final int TIMEOUT = 15000;

    public static String getRecipe(String dishName) throws IOException {
        // 1. –ò—â–µ–º —Ä–µ—Ü–µ–ø—Ç—ã —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫
        String searchUrl = BASE_URL + "/recipes/search.php?srch=" + dishName.replace(" ", "+");

        Document searchPage = Jsoup.connect(searchUrl)
                .userAgent("Mozilla/5.0 (Windows NT 10.0; Win64; x64)")
                .referrer(BASE_URL)
                .timeout(TIMEOUT)
                .get();

        // 2. –ù–æ–≤—ã–µ —Ç–æ—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã (–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–∞ 2024 –≥–æ–¥)
        Elements recipeItems = searchPage.select("div.recipe_list_item");
        if (recipeItems.isEmpty()) {
            throw new IOException("–†–µ—Ü–µ–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
        }

        // 3. –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç
        Element firstRecipe = recipeItems.first();
        String recipeUrl = BASE_URL + firstRecipe.selectFirst("a.recipe_title").attr("href");
        String recipeTitle = firstRecipe.selectFirst("a.recipe_title").text();

        // 4. –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ —Ä–µ—Ü–µ–ø—Ç–∞
        Document recipePage = Jsoup.connect(recipeUrl)
                .timeout(TIMEOUT)
                .get();

        // 5. –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        return formatFullRecipe(recipeTitle, recipePage);
    }

    private static String formatFullRecipe(String title, Document page) {
        StringBuilder result = new StringBuilder();
        result.append("üç≤ *").append(title).append("*\n\n");

        // –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
        result.append("üõí *–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:*\n");
        Elements ingredients = page.select("table.ingr_table tr:not(.header)");
        for (Element ingr : ingredients) {
            result.append("- ")
                    .append(ingr.select(".name").text())
                    .append(" ‚Äî ")
                    .append(ingr.select(".value").text())
                    .append("\n");
        }

        // –®–∞–≥–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è
        result.append("\nüìù *–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:*\n");
        Elements steps = page.select("div.step_n, div.step_txt");
        for (int i = 0; i < steps.size(); i += 2) {
            if (i+1 < steps.size()) {
                result.append(i/2 + 1).append(". ")
                        .append(steps.get(i+1).text())
                        .append("\n\n");
            }
        }

        // –í—Ä–µ–º—è –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å
        Element info = page.selectFirst("div.recipe_info");
        if (info != null) {
            result.append("\n‚è± *–í—Ä–µ–º—è:* ").append(info.select("span.time").text()).append("\n");
            result.append("‚öô *–°–ª–æ–∂–Ω–æ—Å—Ç—å:* ").append(info.select("span.level").text());
        }

        return result.toString();
    }
}